# Makefile.in generated by automake 1.13.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/gsatools
pkgincludedir = $(includedir)/gsatools
pkglibdir = $(libdir)/gsatools
pkglibexecdir = $(libexecdir)/gsatools
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = g_sa_encode$(EXEEXT) g_sa_analyze$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/ax_mpi.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_g_sa_analyze_OBJECTS = g_sa_analyze.$(OBJEXT) matrix.$(OBJEXT) \
	safe.$(OBJEXT) mergesort.$(OBJEXT) sequence.$(OBJEXT) \
	code.$(OBJEXT) probability.$(OBJEXT) fragment_colour.$(OBJEXT) \
	fragments.$(OBJEXT) getfragments.$(OBJEXT) kabsch.$(OBJEXT) \
	quatRMSD.$(OBJEXT) transform_segment.$(OBJEXT) \
	vec2mat.$(OBJEXT) label.$(OBJEXT) object.$(OBJEXT) \
	partition.$(OBJEXT) score.$(OBJEXT) value.$(OBJEXT)
g_sa_analyze_OBJECTS = $(am_g_sa_analyze_OBJECTS)
g_sa_analyze_LDADD = $(LDADD)
am_g_sa_encode_OBJECTS = g_sa_encode.$(OBJEXT) matrix.$(OBJEXT) \
	safe.$(OBJEXT) mergesort.$(OBJEXT) encode.$(OBJEXT) \
	sequence.$(OBJEXT) code.$(OBJEXT) probability.$(OBJEXT) \
	fragment_colour.$(OBJEXT) fragments.$(OBJEXT) \
	getfragments.$(OBJEXT) kabsch.$(OBJEXT) quatRMSD.$(OBJEXT) \
	transform_segment.$(OBJEXT) vec2mat.$(OBJEXT)
g_sa_encode_OBJECTS = $(am_g_sa_encode_OBJECTS)
g_sa_encode_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(g_sa_analyze_SOURCES) $(g_sa_encode_SOURCES)
DIST_SOURCES = $(g_sa_analyze_SOURCES) $(g_sa_encode_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk/missing autoconf
AUTOHEADER = ${SHELL} /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk/missing autoheader
AUTOMAKE = ${SHELL} /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk/missing automake-1.13
AWK = mawk
CC = mpicc
CCDEPMODE = depmode=gcc3
CFLAGS = -pg -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GMXDIR = /home/jkleinj/apps/gromacs-4.5.5
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lmd -lgmx -lm -lgsl -lgslcblas
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk/missing makeinfo
MKDIR_P = /bin/mkdir -p
MPICC = mpicc
MPILIBS =  
OBJEXT = o
PACKAGE = gsatools
PACKAGE_BUGREPORT = alessandro.pandini@gmail.com
PACKAGE_NAME = GSATools
PACKAGE_STRING = GSATools 4.5.x-1.00
PACKAGE_TARNAME = gsatools
PACKAGE_URL = 
PACKAGE_VERSION = 4.5.x-1.00
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 4.5.x-1.00
abs_builddir = /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk/src
abs_srcdir = /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk/src
abs_top_builddir = /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk
abs_top_srcdir = /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jkleinj/jk.software/develop/SAsuite/GSAtools/gsatools-4.5-opt-jk/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CFLAGS = -Wall -Wno-unused -funroll-all-loops
AM_CPPFLAGS = -I$(GMXDIR)/include -I$(GMXDIR)/include/gromacs
AM_LDFLAGS = -L$(GMXDIR)/lib -L/opt/local/lib $(LIBS)
g_sa_encode_SOURCES = g_sa_encode.c\
	general/matrix.c general/matrix.h\
	general/safe.c general/safe.h\
	general/mergesort.c general/mergesort.h\
	sequence/encode.c sequence/encode.h\
	sequence/sequence.c sequence/sequence.h\
	statistics/code.c statistics/code.h\
	statistics/probability.c statistics/probability.h\
	structure/fragment_colour.c structure/fragment_colour.h\
	structure/fragments.c structure/fragments.h\
	structure/fragments_coords.h\
	structure/getfragments.c structure/getfragments.h\
	structure/kabsch.c structure/kabsch.h\
	structure/pdb_structure.h\
	structure/quatRMSD.c structure/quatRMSD.h\
	structure/transform_segment.c structure/transform_segment.h\
	structure/vec2mat.c structure/vec2mat.h

g_sa_analyze_SOURCES = g_sa_analyze.c\
	general/matrix.c general/matrix.h\
	general/safe.c general/safe.h\
	general/mergesort.c general/mergesort.h\
	sequence/sequence.c sequence/sequence.h\
	statistics/code.c statistics/code.h\
	statistics/probability.c statistics/probability.h\
	structure/fragment_colour.c structure/fragment_colour.h\
	structure/fragments.c structure/fragments.h\
	structure/fragments_coords.h\
	structure/getfragments.c structure/getfragments.h\
	structure/kabsch.c structure/kabsch.h\
	structure/pdb_structure.h\
	structure/quatRMSD.c structure/quatRMSD.h\
	structure/transform_segment.c structure/transform_segment.h\
	structure/vec2mat.c structure/vec2mat.h\
	partition/label.c partition/label.h\
	partition/object.c partition/object.h\
	partition/partition.c partition/partition.h\
	partition/score.c partition/score.h\
	partition/value.c partition/value.h

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
g_sa_analyze$(EXEEXT): $(g_sa_analyze_OBJECTS) $(g_sa_analyze_DEPENDENCIES) $(EXTRA_g_sa_analyze_DEPENDENCIES) 
	@rm -f g_sa_analyze$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(g_sa_analyze_OBJECTS) $(g_sa_analyze_LDADD) $(LIBS)
g_sa_encode$(EXEEXT): $(g_sa_encode_OBJECTS) $(g_sa_encode_DEPENDENCIES) $(EXTRA_g_sa_encode_DEPENDENCIES) 
	@rm -f g_sa_encode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(g_sa_encode_OBJECTS) $(g_sa_encode_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/code.Po
include ./$(DEPDIR)/encode.Po
include ./$(DEPDIR)/fragment_colour.Po
include ./$(DEPDIR)/fragments.Po
include ./$(DEPDIR)/g_sa_analyze.Po
include ./$(DEPDIR)/g_sa_encode.Po
include ./$(DEPDIR)/getfragments.Po
include ./$(DEPDIR)/kabsch.Po
include ./$(DEPDIR)/label.Po
include ./$(DEPDIR)/matrix.Po
include ./$(DEPDIR)/mergesort.Po
include ./$(DEPDIR)/object.Po
include ./$(DEPDIR)/partition.Po
include ./$(DEPDIR)/probability.Po
include ./$(DEPDIR)/quatRMSD.Po
include ./$(DEPDIR)/safe.Po
include ./$(DEPDIR)/score.Po
include ./$(DEPDIR)/sequence.Po
include ./$(DEPDIR)/transform_segment.Po
include ./$(DEPDIR)/value.Po
include ./$(DEPDIR)/vec2mat.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

matrix.o: general/matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix.o -MD -MP -MF $(DEPDIR)/matrix.Tpo -c -o matrix.o `test -f 'general/matrix.c' || echo '$(srcdir)/'`general/matrix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix.Tpo $(DEPDIR)/matrix.Po
#	$(AM_V_CC)source='general/matrix.c' object='matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix.o `test -f 'general/matrix.c' || echo '$(srcdir)/'`general/matrix.c

matrix.obj: general/matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT matrix.obj -MD -MP -MF $(DEPDIR)/matrix.Tpo -c -o matrix.obj `if test -f 'general/matrix.c'; then $(CYGPATH_W) 'general/matrix.c'; else $(CYGPATH_W) '$(srcdir)/general/matrix.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/matrix.Tpo $(DEPDIR)/matrix.Po
#	$(AM_V_CC)source='general/matrix.c' object='matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o matrix.obj `if test -f 'general/matrix.c'; then $(CYGPATH_W) 'general/matrix.c'; else $(CYGPATH_W) '$(srcdir)/general/matrix.c'; fi`

safe.o: general/safe.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT safe.o -MD -MP -MF $(DEPDIR)/safe.Tpo -c -o safe.o `test -f 'general/safe.c' || echo '$(srcdir)/'`general/safe.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/safe.Tpo $(DEPDIR)/safe.Po
#	$(AM_V_CC)source='general/safe.c' object='safe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o safe.o `test -f 'general/safe.c' || echo '$(srcdir)/'`general/safe.c

safe.obj: general/safe.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT safe.obj -MD -MP -MF $(DEPDIR)/safe.Tpo -c -o safe.obj `if test -f 'general/safe.c'; then $(CYGPATH_W) 'general/safe.c'; else $(CYGPATH_W) '$(srcdir)/general/safe.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/safe.Tpo $(DEPDIR)/safe.Po
#	$(AM_V_CC)source='general/safe.c' object='safe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o safe.obj `if test -f 'general/safe.c'; then $(CYGPATH_W) 'general/safe.c'; else $(CYGPATH_W) '$(srcdir)/general/safe.c'; fi`

mergesort.o: general/mergesort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mergesort.o -MD -MP -MF $(DEPDIR)/mergesort.Tpo -c -o mergesort.o `test -f 'general/mergesort.c' || echo '$(srcdir)/'`general/mergesort.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mergesort.Tpo $(DEPDIR)/mergesort.Po
#	$(AM_V_CC)source='general/mergesort.c' object='mergesort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mergesort.o `test -f 'general/mergesort.c' || echo '$(srcdir)/'`general/mergesort.c

mergesort.obj: general/mergesort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mergesort.obj -MD -MP -MF $(DEPDIR)/mergesort.Tpo -c -o mergesort.obj `if test -f 'general/mergesort.c'; then $(CYGPATH_W) 'general/mergesort.c'; else $(CYGPATH_W) '$(srcdir)/general/mergesort.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mergesort.Tpo $(DEPDIR)/mergesort.Po
#	$(AM_V_CC)source='general/mergesort.c' object='mergesort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mergesort.obj `if test -f 'general/mergesort.c'; then $(CYGPATH_W) 'general/mergesort.c'; else $(CYGPATH_W) '$(srcdir)/general/mergesort.c'; fi`

sequence.o: sequence/sequence.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sequence.o -MD -MP -MF $(DEPDIR)/sequence.Tpo -c -o sequence.o `test -f 'sequence/sequence.c' || echo '$(srcdir)/'`sequence/sequence.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sequence.Tpo $(DEPDIR)/sequence.Po
#	$(AM_V_CC)source='sequence/sequence.c' object='sequence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sequence.o `test -f 'sequence/sequence.c' || echo '$(srcdir)/'`sequence/sequence.c

sequence.obj: sequence/sequence.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sequence.obj -MD -MP -MF $(DEPDIR)/sequence.Tpo -c -o sequence.obj `if test -f 'sequence/sequence.c'; then $(CYGPATH_W) 'sequence/sequence.c'; else $(CYGPATH_W) '$(srcdir)/sequence/sequence.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sequence.Tpo $(DEPDIR)/sequence.Po
#	$(AM_V_CC)source='sequence/sequence.c' object='sequence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sequence.obj `if test -f 'sequence/sequence.c'; then $(CYGPATH_W) 'sequence/sequence.c'; else $(CYGPATH_W) '$(srcdir)/sequence/sequence.c'; fi`

code.o: statistics/code.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT code.o -MD -MP -MF $(DEPDIR)/code.Tpo -c -o code.o `test -f 'statistics/code.c' || echo '$(srcdir)/'`statistics/code.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/code.Tpo $(DEPDIR)/code.Po
#	$(AM_V_CC)source='statistics/code.c' object='code.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o code.o `test -f 'statistics/code.c' || echo '$(srcdir)/'`statistics/code.c

code.obj: statistics/code.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT code.obj -MD -MP -MF $(DEPDIR)/code.Tpo -c -o code.obj `if test -f 'statistics/code.c'; then $(CYGPATH_W) 'statistics/code.c'; else $(CYGPATH_W) '$(srcdir)/statistics/code.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/code.Tpo $(DEPDIR)/code.Po
#	$(AM_V_CC)source='statistics/code.c' object='code.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o code.obj `if test -f 'statistics/code.c'; then $(CYGPATH_W) 'statistics/code.c'; else $(CYGPATH_W) '$(srcdir)/statistics/code.c'; fi`

probability.o: statistics/probability.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT probability.o -MD -MP -MF $(DEPDIR)/probability.Tpo -c -o probability.o `test -f 'statistics/probability.c' || echo '$(srcdir)/'`statistics/probability.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/probability.Tpo $(DEPDIR)/probability.Po
#	$(AM_V_CC)source='statistics/probability.c' object='probability.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o probability.o `test -f 'statistics/probability.c' || echo '$(srcdir)/'`statistics/probability.c

probability.obj: statistics/probability.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT probability.obj -MD -MP -MF $(DEPDIR)/probability.Tpo -c -o probability.obj `if test -f 'statistics/probability.c'; then $(CYGPATH_W) 'statistics/probability.c'; else $(CYGPATH_W) '$(srcdir)/statistics/probability.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/probability.Tpo $(DEPDIR)/probability.Po
#	$(AM_V_CC)source='statistics/probability.c' object='probability.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o probability.obj `if test -f 'statistics/probability.c'; then $(CYGPATH_W) 'statistics/probability.c'; else $(CYGPATH_W) '$(srcdir)/statistics/probability.c'; fi`

fragment_colour.o: structure/fragment_colour.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fragment_colour.o -MD -MP -MF $(DEPDIR)/fragment_colour.Tpo -c -o fragment_colour.o `test -f 'structure/fragment_colour.c' || echo '$(srcdir)/'`structure/fragment_colour.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fragment_colour.Tpo $(DEPDIR)/fragment_colour.Po
#	$(AM_V_CC)source='structure/fragment_colour.c' object='fragment_colour.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fragment_colour.o `test -f 'structure/fragment_colour.c' || echo '$(srcdir)/'`structure/fragment_colour.c

fragment_colour.obj: structure/fragment_colour.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fragment_colour.obj -MD -MP -MF $(DEPDIR)/fragment_colour.Tpo -c -o fragment_colour.obj `if test -f 'structure/fragment_colour.c'; then $(CYGPATH_W) 'structure/fragment_colour.c'; else $(CYGPATH_W) '$(srcdir)/structure/fragment_colour.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fragment_colour.Tpo $(DEPDIR)/fragment_colour.Po
#	$(AM_V_CC)source='structure/fragment_colour.c' object='fragment_colour.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fragment_colour.obj `if test -f 'structure/fragment_colour.c'; then $(CYGPATH_W) 'structure/fragment_colour.c'; else $(CYGPATH_W) '$(srcdir)/structure/fragment_colour.c'; fi`

fragments.o: structure/fragments.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fragments.o -MD -MP -MF $(DEPDIR)/fragments.Tpo -c -o fragments.o `test -f 'structure/fragments.c' || echo '$(srcdir)/'`structure/fragments.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fragments.Tpo $(DEPDIR)/fragments.Po
#	$(AM_V_CC)source='structure/fragments.c' object='fragments.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fragments.o `test -f 'structure/fragments.c' || echo '$(srcdir)/'`structure/fragments.c

fragments.obj: structure/fragments.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fragments.obj -MD -MP -MF $(DEPDIR)/fragments.Tpo -c -o fragments.obj `if test -f 'structure/fragments.c'; then $(CYGPATH_W) 'structure/fragments.c'; else $(CYGPATH_W) '$(srcdir)/structure/fragments.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fragments.Tpo $(DEPDIR)/fragments.Po
#	$(AM_V_CC)source='structure/fragments.c' object='fragments.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fragments.obj `if test -f 'structure/fragments.c'; then $(CYGPATH_W) 'structure/fragments.c'; else $(CYGPATH_W) '$(srcdir)/structure/fragments.c'; fi`

getfragments.o: structure/getfragments.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT getfragments.o -MD -MP -MF $(DEPDIR)/getfragments.Tpo -c -o getfragments.o `test -f 'structure/getfragments.c' || echo '$(srcdir)/'`structure/getfragments.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/getfragments.Tpo $(DEPDIR)/getfragments.Po
#	$(AM_V_CC)source='structure/getfragments.c' object='getfragments.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o getfragments.o `test -f 'structure/getfragments.c' || echo '$(srcdir)/'`structure/getfragments.c

getfragments.obj: structure/getfragments.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT getfragments.obj -MD -MP -MF $(DEPDIR)/getfragments.Tpo -c -o getfragments.obj `if test -f 'structure/getfragments.c'; then $(CYGPATH_W) 'structure/getfragments.c'; else $(CYGPATH_W) '$(srcdir)/structure/getfragments.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/getfragments.Tpo $(DEPDIR)/getfragments.Po
#	$(AM_V_CC)source='structure/getfragments.c' object='getfragments.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o getfragments.obj `if test -f 'structure/getfragments.c'; then $(CYGPATH_W) 'structure/getfragments.c'; else $(CYGPATH_W) '$(srcdir)/structure/getfragments.c'; fi`

kabsch.o: structure/kabsch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kabsch.o -MD -MP -MF $(DEPDIR)/kabsch.Tpo -c -o kabsch.o `test -f 'structure/kabsch.c' || echo '$(srcdir)/'`structure/kabsch.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/kabsch.Tpo $(DEPDIR)/kabsch.Po
#	$(AM_V_CC)source='structure/kabsch.c' object='kabsch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kabsch.o `test -f 'structure/kabsch.c' || echo '$(srcdir)/'`structure/kabsch.c

kabsch.obj: structure/kabsch.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT kabsch.obj -MD -MP -MF $(DEPDIR)/kabsch.Tpo -c -o kabsch.obj `if test -f 'structure/kabsch.c'; then $(CYGPATH_W) 'structure/kabsch.c'; else $(CYGPATH_W) '$(srcdir)/structure/kabsch.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/kabsch.Tpo $(DEPDIR)/kabsch.Po
#	$(AM_V_CC)source='structure/kabsch.c' object='kabsch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o kabsch.obj `if test -f 'structure/kabsch.c'; then $(CYGPATH_W) 'structure/kabsch.c'; else $(CYGPATH_W) '$(srcdir)/structure/kabsch.c'; fi`

quatRMSD.o: structure/quatRMSD.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT quatRMSD.o -MD -MP -MF $(DEPDIR)/quatRMSD.Tpo -c -o quatRMSD.o `test -f 'structure/quatRMSD.c' || echo '$(srcdir)/'`structure/quatRMSD.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/quatRMSD.Tpo $(DEPDIR)/quatRMSD.Po
#	$(AM_V_CC)source='structure/quatRMSD.c' object='quatRMSD.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o quatRMSD.o `test -f 'structure/quatRMSD.c' || echo '$(srcdir)/'`structure/quatRMSD.c

quatRMSD.obj: structure/quatRMSD.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT quatRMSD.obj -MD -MP -MF $(DEPDIR)/quatRMSD.Tpo -c -o quatRMSD.obj `if test -f 'structure/quatRMSD.c'; then $(CYGPATH_W) 'structure/quatRMSD.c'; else $(CYGPATH_W) '$(srcdir)/structure/quatRMSD.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/quatRMSD.Tpo $(DEPDIR)/quatRMSD.Po
#	$(AM_V_CC)source='structure/quatRMSD.c' object='quatRMSD.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o quatRMSD.obj `if test -f 'structure/quatRMSD.c'; then $(CYGPATH_W) 'structure/quatRMSD.c'; else $(CYGPATH_W) '$(srcdir)/structure/quatRMSD.c'; fi`

transform_segment.o: structure/transform_segment.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transform_segment.o -MD -MP -MF $(DEPDIR)/transform_segment.Tpo -c -o transform_segment.o `test -f 'structure/transform_segment.c' || echo '$(srcdir)/'`structure/transform_segment.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/transform_segment.Tpo $(DEPDIR)/transform_segment.Po
#	$(AM_V_CC)source='structure/transform_segment.c' object='transform_segment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transform_segment.o `test -f 'structure/transform_segment.c' || echo '$(srcdir)/'`structure/transform_segment.c

transform_segment.obj: structure/transform_segment.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transform_segment.obj -MD -MP -MF $(DEPDIR)/transform_segment.Tpo -c -o transform_segment.obj `if test -f 'structure/transform_segment.c'; then $(CYGPATH_W) 'structure/transform_segment.c'; else $(CYGPATH_W) '$(srcdir)/structure/transform_segment.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/transform_segment.Tpo $(DEPDIR)/transform_segment.Po
#	$(AM_V_CC)source='structure/transform_segment.c' object='transform_segment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transform_segment.obj `if test -f 'structure/transform_segment.c'; then $(CYGPATH_W) 'structure/transform_segment.c'; else $(CYGPATH_W) '$(srcdir)/structure/transform_segment.c'; fi`

vec2mat.o: structure/vec2mat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vec2mat.o -MD -MP -MF $(DEPDIR)/vec2mat.Tpo -c -o vec2mat.o `test -f 'structure/vec2mat.c' || echo '$(srcdir)/'`structure/vec2mat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vec2mat.Tpo $(DEPDIR)/vec2mat.Po
#	$(AM_V_CC)source='structure/vec2mat.c' object='vec2mat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vec2mat.o `test -f 'structure/vec2mat.c' || echo '$(srcdir)/'`structure/vec2mat.c

vec2mat.obj: structure/vec2mat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT vec2mat.obj -MD -MP -MF $(DEPDIR)/vec2mat.Tpo -c -o vec2mat.obj `if test -f 'structure/vec2mat.c'; then $(CYGPATH_W) 'structure/vec2mat.c'; else $(CYGPATH_W) '$(srcdir)/structure/vec2mat.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vec2mat.Tpo $(DEPDIR)/vec2mat.Po
#	$(AM_V_CC)source='structure/vec2mat.c' object='vec2mat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o vec2mat.obj `if test -f 'structure/vec2mat.c'; then $(CYGPATH_W) 'structure/vec2mat.c'; else $(CYGPATH_W) '$(srcdir)/structure/vec2mat.c'; fi`

label.o: partition/label.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT label.o -MD -MP -MF $(DEPDIR)/label.Tpo -c -o label.o `test -f 'partition/label.c' || echo '$(srcdir)/'`partition/label.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/label.Tpo $(DEPDIR)/label.Po
#	$(AM_V_CC)source='partition/label.c' object='label.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o label.o `test -f 'partition/label.c' || echo '$(srcdir)/'`partition/label.c

label.obj: partition/label.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT label.obj -MD -MP -MF $(DEPDIR)/label.Tpo -c -o label.obj `if test -f 'partition/label.c'; then $(CYGPATH_W) 'partition/label.c'; else $(CYGPATH_W) '$(srcdir)/partition/label.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/label.Tpo $(DEPDIR)/label.Po
#	$(AM_V_CC)source='partition/label.c' object='label.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o label.obj `if test -f 'partition/label.c'; then $(CYGPATH_W) 'partition/label.c'; else $(CYGPATH_W) '$(srcdir)/partition/label.c'; fi`

object.o: partition/object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT object.o -MD -MP -MF $(DEPDIR)/object.Tpo -c -o object.o `test -f 'partition/object.c' || echo '$(srcdir)/'`partition/object.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/object.Tpo $(DEPDIR)/object.Po
#	$(AM_V_CC)source='partition/object.c' object='object.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o object.o `test -f 'partition/object.c' || echo '$(srcdir)/'`partition/object.c

object.obj: partition/object.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT object.obj -MD -MP -MF $(DEPDIR)/object.Tpo -c -o object.obj `if test -f 'partition/object.c'; then $(CYGPATH_W) 'partition/object.c'; else $(CYGPATH_W) '$(srcdir)/partition/object.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/object.Tpo $(DEPDIR)/object.Po
#	$(AM_V_CC)source='partition/object.c' object='object.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o object.obj `if test -f 'partition/object.c'; then $(CYGPATH_W) 'partition/object.c'; else $(CYGPATH_W) '$(srcdir)/partition/object.c'; fi`

partition.o: partition/partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partition.o -MD -MP -MF $(DEPDIR)/partition.Tpo -c -o partition.o `test -f 'partition/partition.c' || echo '$(srcdir)/'`partition/partition.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/partition.Tpo $(DEPDIR)/partition.Po
#	$(AM_V_CC)source='partition/partition.c' object='partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partition.o `test -f 'partition/partition.c' || echo '$(srcdir)/'`partition/partition.c

partition.obj: partition/partition.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT partition.obj -MD -MP -MF $(DEPDIR)/partition.Tpo -c -o partition.obj `if test -f 'partition/partition.c'; then $(CYGPATH_W) 'partition/partition.c'; else $(CYGPATH_W) '$(srcdir)/partition/partition.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/partition.Tpo $(DEPDIR)/partition.Po
#	$(AM_V_CC)source='partition/partition.c' object='partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o partition.obj `if test -f 'partition/partition.c'; then $(CYGPATH_W) 'partition/partition.c'; else $(CYGPATH_W) '$(srcdir)/partition/partition.c'; fi`

score.o: partition/score.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT score.o -MD -MP -MF $(DEPDIR)/score.Tpo -c -o score.o `test -f 'partition/score.c' || echo '$(srcdir)/'`partition/score.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/score.Tpo $(DEPDIR)/score.Po
#	$(AM_V_CC)source='partition/score.c' object='score.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o score.o `test -f 'partition/score.c' || echo '$(srcdir)/'`partition/score.c

score.obj: partition/score.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT score.obj -MD -MP -MF $(DEPDIR)/score.Tpo -c -o score.obj `if test -f 'partition/score.c'; then $(CYGPATH_W) 'partition/score.c'; else $(CYGPATH_W) '$(srcdir)/partition/score.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/score.Tpo $(DEPDIR)/score.Po
#	$(AM_V_CC)source='partition/score.c' object='score.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o score.obj `if test -f 'partition/score.c'; then $(CYGPATH_W) 'partition/score.c'; else $(CYGPATH_W) '$(srcdir)/partition/score.c'; fi`

value.o: partition/value.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT value.o -MD -MP -MF $(DEPDIR)/value.Tpo -c -o value.o `test -f 'partition/value.c' || echo '$(srcdir)/'`partition/value.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/value.Tpo $(DEPDIR)/value.Po
#	$(AM_V_CC)source='partition/value.c' object='value.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o value.o `test -f 'partition/value.c' || echo '$(srcdir)/'`partition/value.c

value.obj: partition/value.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT value.obj -MD -MP -MF $(DEPDIR)/value.Tpo -c -o value.obj `if test -f 'partition/value.c'; then $(CYGPATH_W) 'partition/value.c'; else $(CYGPATH_W) '$(srcdir)/partition/value.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/value.Tpo $(DEPDIR)/value.Po
#	$(AM_V_CC)source='partition/value.c' object='value.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o value.obj `if test -f 'partition/value.c'; then $(CYGPATH_W) 'partition/value.c'; else $(CYGPATH_W) '$(srcdir)/partition/value.c'; fi`

encode.o: sequence/encode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT encode.o -MD -MP -MF $(DEPDIR)/encode.Tpo -c -o encode.o `test -f 'sequence/encode.c' || echo '$(srcdir)/'`sequence/encode.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/encode.Tpo $(DEPDIR)/encode.Po
#	$(AM_V_CC)source='sequence/encode.c' object='encode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o encode.o `test -f 'sequence/encode.c' || echo '$(srcdir)/'`sequence/encode.c

encode.obj: sequence/encode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT encode.obj -MD -MP -MF $(DEPDIR)/encode.Tpo -c -o encode.obj `if test -f 'sequence/encode.c'; then $(CYGPATH_W) 'sequence/encode.c'; else $(CYGPATH_W) '$(srcdir)/sequence/encode.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/encode.Tpo $(DEPDIR)/encode.Po
#	$(AM_V_CC)source='sequence/encode.c' object='encode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o encode.obj `if test -f 'sequence/encode.c'; then $(CYGPATH_W) 'sequence/encode.c'; else $(CYGPATH_W) '$(srcdir)/sequence/encode.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
